<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: build.xml 333 2006-04-24 12:11:53Z apr $ -->
<project name="HQServer" default="module" basedir="."
    xmlns:cs="antlib:com.puppycrawl.tools.checkstyle">
    <!-- And then our defaults -->
    <property file="build.properties"/>

 	<!-- Name of project and version, used to create filenames -->
    <property name="Name" value="HQServer" />
    <property name="name" value="hqserver" />
    <property name="archive" value="${name}-${version}" />
    
     <property name="lib.dir" value="lib"/>
     <property name="src.dir" value="src"/>
     <property name="cfg.dir" value="cfg"/>
     <property name="deploy.dir" value="deploy"/>
    
    <property name="build.dir" value="build"/>
    <property name="build.src" value="${build.dir}/src"/>
    <property name="build.doc" value="${build.dir}/doc"/>
    <property name="build.lib" value="${build.dir}/lib"/>
    <property name="build.deploy" value="${build.dir}/deploy"/>
    <property name="build.cfg" value="${build.dir}/cfg"/>
    <property name="build.log"    value="${build.dir}/log"/>
    <property name="build.javadoc" value="${build.dir}/javadoc"/>
    <property name="deprecation" value="false"  />
    <property name="nowarn" value="true"  />
    <property name="debug" value="on"/>

	<property name="build.src" value="${build.dir}/src"/>

	  <target name="clean" description="clean up build directories">
        <delete dir="${build.dir}"/>
    </target>
	
    <target name="prepare">
      <tstamp>
        <format property="subversion" pattern="yyyy.MM.dd.hh.mm.ss"/>
      </tstamp>
      <tstamp>
        <format property="date" pattern="yyyy.MM.dd.hh.mm.ss"/>
      </tstamp>
      <echo 
       message="Build ${Name}-${version}.${subversion}"/>

      <mkdir dir="${build.dir}"/>
      <mkdir dir="${build.src}"/>
      <mkdir dir="${build.lib}"/>
      <mkdir dir="${build.doc}"/>
      <mkdir dir="${build.cfg}"/>
      <mkdir dir="${build.deploy}"/>
      <mkdir dir="${build.dir}/log"/>
    </target>

    <target name="info">
        <echo message="java.vm.info=${java.vm.info}"/>
        <echo message="java.vm.name=${java.vm.name}"/>
        <echo message="java.vm.vendor=${java.vm.vendor}"/>
        <echo message="java.vm.version=${java.vm.version}"/>
        <echo message="os.arch=${os.arch}"/>
        <echo message="os.name=${os.name}"/>
        <echo message="os.version=${os.version}"/>
        <echo message="java.home=${java.home}"/>
        <echo message="java.class.path=${java.class.path}"/>
        <echo message="file.encoding=${file.encoding}"/>
        <echo message="file.separator=${file.separator}"/>
        <echo message="user.home=${user.home}"/>
        <echo message="user.name=${user.name}"/>
        <echo message="user.language=${user.language}"/>
    </target>

    <target name="module" depends="clean, prepare">
      <copy todir="${build.deploy}" flatten="true" filtering="true">
        <fileset dir="${deploy.dir}">
          <include name="**/*.xml"/>
        </fileset>
      </copy>
      <copy todir="${build.lib}" flatten="true">
        <fileset dir="${lib.dir}">
          <include name="**/*.jar"/>
          <include name="**/*.dll"/>
          <include name="**/*.so"/>
        </fileset>
      </copy>
      <copy todir="${build.cfg}">
        <fileset dir="${cfg.dir}">
          <include name="**/*.xml"/>
        </fileset>
      </copy>
      <copy todir="${build.src}">
        <fileset dir="${src.dir}">
          <include name="**/*.java"/>
        </fileset>
      </copy>
    </target>

    <target name="doc">
     <ant dir="doc" inheritAll="false" target="all.doc" />
    </target>

    <target name="javadoc"  
        description="generate javadocs">
        <mkdir   dir="${build.javadoc}" />
        <javadoc sourcepath="${build.src}"
            destdir="${build.javadoc}"
            windowtitle="HQServer ${version} API Documentation" 
            doctitle="HQServer ${version} API Documentation" 
            header="HQServer ${version} API Documentation" 
            footer="HQSolution.com"
            public="true" noindex="false" author="true" 
            classpathref="main.classpath"
            packagenames="*"
        />
    </target>
  
</project>

